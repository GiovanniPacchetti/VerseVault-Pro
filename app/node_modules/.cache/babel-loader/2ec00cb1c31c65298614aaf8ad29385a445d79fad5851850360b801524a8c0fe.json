{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chivi\\\\Desktop\\\\uni\\\\personal\\\\VerseVault-Pro\\\\app\\\\src\\\\ReadBook.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport './ReadBook.css'; // Importar el archivo CSS\nimport bookmarkIcon from './assets/logo/bookMark.png'; // Importar el icono del marcador\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReadBook({\n  userId,\n  bookName,\n  currentPage,\n  setView\n}) {\n  _s();\n  const [bookContent, setBookContent] = useState(\"\");\n  const [leftPageContent, setLeftPageContent] = useState(\"\");\n  const [rightPageContent, setRightPageContent] = useState(\"\");\n  const [currentPageState, setCurrentPageState] = useState(currentPage);\n  const [error, setError] = useState(null);\n  const [addingBookmark, setAddingBookmark] = useState(false);\n  const [bookmarkPage, setBookmarkPage] = useState(null);\n  const leftContentRef = useRef(null);\n  const rightContentRef = useRef(null);\n\n  // Cargar el libro desde el servidor\n  const fetchBook = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/user/${userId}/books/content?bookName=${bookName}`);\n      const data = await response.json();\n      setBookContent(data.content);\n      // Si hay un marcador, abrir en la página del marcador\n      if (data.bookmarkPage) {\n        setCurrentPageState(data.bookmarkPage % 2 === 0 ? data.bookmarkPage - 1 : data.bookmarkPage);\n        setBookmarkPage(data.bookmarkPage);\n      }\n    } catch (err) {\n      setError(\"Error al cargar el libro.\");\n    }\n  };\n  useEffect(() => {\n    fetchBook();\n  }, []);\n\n  // Mostrar contenido de las páginas actuales\n  useEffect(() => {\n    const adjustPageContent = () => {\n      if (leftContentRef.current && rightContentRef.current) {\n        const linesPerPage = 24; // Número inicial de líneas por página\n        const lines = bookContent.split('\\n');\n        const startLeft = currentPageState * linesPerPage;\n        let endLeft = startLeft + linesPerPage;\n        const startRight = endLeft;\n        let endRight = startRight + linesPerPage;\n        const leftPageText = lines.slice(startLeft, endLeft).join('\\n');\n        const rightPageText = lines.slice(startRight, endRight).join('\\n');\n        setLeftPageContent(leftPageText);\n        setRightPageContent(rightPageText);\n\n        // Ajustar el contenido para que se ajuste al contenedor izquierdo\n        while (leftContentRef.current.scrollHeight > leftContentRef.current.clientHeight && endLeft > startLeft) {\n          endLeft--;\n          setLeftPageContent(lines.slice(startLeft, endLeft).join('\\n'));\n        }\n\n        // Ajustar el contenido para que se ajuste al contenedor derecho\n        while (rightContentRef.current.scrollHeight > rightContentRef.current.clientHeight && endRight > startRight) {\n          endRight--;\n          setRightPageContent(lines.slice(startRight, endRight).join('\\n'));\n        }\n      }\n    };\n    adjustPageContent();\n  }, [bookContent, currentPageState]);\n  const handleNextPage = () => {\n    setCurrentPageState(currentPageState + 2);\n  };\n  const handlePreviousPage = () => {\n    if (currentPageState > 0) {\n      setCurrentPageState(currentPageState - 2);\n    }\n  };\n  const handleCloseBook = async () => {\n    try {\n      const pageToSave = bookmarkPage !== null ? bookmarkPage : currentPageState;\n      await fetch(`http://localhost:5000/user/${userId}/books/progress`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId,\n          bookName,\n          page: pageToSave\n        })\n      });\n      setView(\"list\"); // Regresar a la lista de libros\n    } catch (err) {\n      setError(\"Error al guardar el progreso.\");\n    }\n  };\n  const handleAddBookmark = () => {\n    setAddingBookmark(true);\n  };\n  const handlePageClick = async page => {\n    if (addingBookmark) {\n      setBookmarkPage(page);\n      setAddingBookmark(false);\n      try {\n        await fetch(`http://localhost:5000/user/${userId}/books/bookmark`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            userId,\n            bookName,\n            page\n          })\n        });\n      } catch (err) {\n        setError(\"Error al guardar el marcador.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"read-book-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: bookName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error && `Error: ${error}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        ref: leftContentRef,\n        onClick: () => handlePageClick(currentPageState + 1),\n        children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n          children: leftPageContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-number\",\n          children: [\"P\\xE1gina \", currentPageState + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), bookmarkPage === currentPageState + 1 && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: bookmarkIcon,\n          alt: \"Bookmark\",\n          className: \"bookmark-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        ref: rightContentRef,\n        onClick: () => handlePageClick(currentPageState + 2),\n        children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n          children: rightPageContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-number\",\n          children: [\"P\\xE1gina \", currentPageState + 2]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), bookmarkPage === currentPageState + 2 && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: bookmarkIcon,\n          alt: \"Bookmark\",\n          className: \"bookmark-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreviousPage,\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextPage,\n        children: \"Siguiente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCloseBook,\n        children: \"Cerrar libro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddBookmark,\n        children: \"A\\xF1adir marcador\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(ReadBook, \"xqYSaMHGY0htP8/06Ti9tNNtmvs=\");\n_c = ReadBook;\nexport default ReadBook;\nvar _c;\n$RefreshReg$(_c, \"ReadBook\");","map":{"version":3,"names":["React","useEffect","useState","useRef","bookmarkIcon","jsxDEV","_jsxDEV","ReadBook","userId","bookName","currentPage","setView","_s","bookContent","setBookContent","leftPageContent","setLeftPageContent","rightPageContent","setRightPageContent","currentPageState","setCurrentPageState","error","setError","addingBookmark","setAddingBookmark","bookmarkPage","setBookmarkPage","leftContentRef","rightContentRef","fetchBook","response","fetch","data","json","content","err","adjustPageContent","current","linesPerPage","lines","split","startLeft","endLeft","startRight","endRight","leftPageText","slice","join","rightPageText","scrollHeight","clientHeight","handleNextPage","handlePreviousPage","handleCloseBook","pageToSave","method","headers","body","JSON","stringify","page","handleAddBookmark","handlePageClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/chivi/Desktop/uni/personal/VerseVault-Pro/app/src/ReadBook.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport './ReadBook.css'; // Importar el archivo CSS\r\nimport bookmarkIcon from './assets/logo/bookMark.png'; // Importar el icono del marcador\r\n\r\nfunction ReadBook({ userId, bookName, currentPage, setView }) {\r\n  const [bookContent, setBookContent] = useState(\"\");\r\n  const [leftPageContent, setLeftPageContent] = useState(\"\");\r\n  const [rightPageContent, setRightPageContent] = useState(\"\");\r\n  const [currentPageState, setCurrentPageState] = useState(currentPage);\r\n  const [error, setError] = useState(null);\r\n  const [addingBookmark, setAddingBookmark] = useState(false);\r\n  const [bookmarkPage, setBookmarkPage] = useState(null);\r\n  const leftContentRef = useRef(null);\r\n  const rightContentRef = useRef(null);\r\n\r\n  // Cargar el libro desde el servidor\r\n  const fetchBook = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/user/${userId}/books/content?bookName=${bookName}`);\r\n      const data = await response.json();\r\n      setBookContent(data.content);\r\n      // Si hay un marcador, abrir en la página del marcador\r\n      if (data.bookmarkPage) {\r\n        setCurrentPageState(data.bookmarkPage % 2 === 0 ? data.bookmarkPage - 1 : data.bookmarkPage);\r\n        setBookmarkPage(data.bookmarkPage);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error al cargar el libro.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBook();\r\n  }, []);\r\n\r\n  // Mostrar contenido de las páginas actuales\r\n  useEffect(() => {\r\n    const adjustPageContent = () => {\r\n      if (leftContentRef.current && rightContentRef.current) {\r\n        const linesPerPage = 24; // Número inicial de líneas por página\r\n        const lines = bookContent.split('\\n');\r\n        const startLeft = currentPageState * linesPerPage;\r\n        let endLeft = startLeft + linesPerPage;\r\n        const startRight = endLeft;\r\n        let endRight = startRight + linesPerPage;\r\n\r\n        const leftPageText = lines.slice(startLeft, endLeft).join('\\n');\r\n        const rightPageText = lines.slice(startRight, endRight).join('\\n');\r\n        setLeftPageContent(leftPageText);\r\n        setRightPageContent(rightPageText);\r\n\r\n        // Ajustar el contenido para que se ajuste al contenedor izquierdo\r\n        while (leftContentRef.current.scrollHeight > leftContentRef.current.clientHeight && endLeft > startLeft) {\r\n          endLeft--;\r\n          setLeftPageContent(lines.slice(startLeft, endLeft).join('\\n'));\r\n        }\r\n\r\n        // Ajustar el contenido para que se ajuste al contenedor derecho\r\n        while (rightContentRef.current.scrollHeight > rightContentRef.current.clientHeight && endRight > startRight) {\r\n          endRight--;\r\n          setRightPageContent(lines.slice(startRight, endRight).join('\\n'));\r\n        }\r\n      }\r\n    };\r\n\r\n    adjustPageContent();\r\n  }, [bookContent, currentPageState]);\r\n\r\n  const handleNextPage = () => {\r\n    setCurrentPageState(currentPageState + 2);\r\n  };\r\n\r\n  const handlePreviousPage = () => {\r\n    if (currentPageState > 0) {\r\n      setCurrentPageState(currentPageState - 2);\r\n    }\r\n  };\r\n\r\n  const handleCloseBook = async () => {\r\n    try {\r\n      const pageToSave = bookmarkPage !== null ? bookmarkPage : currentPageState;\r\n      await fetch(`http://localhost:5000/user/${userId}/books/progress`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ userId, bookName, page: pageToSave }),\r\n      });\r\n      setView(\"list\"); // Regresar a la lista de libros\r\n    } catch (err) {\r\n      setError(\"Error al guardar el progreso.\");\r\n    }\r\n  };\r\n\r\n  const handleAddBookmark = () => {\r\n    setAddingBookmark(true);\r\n  };\r\n\r\n  const handlePageClick = async (page) => {\r\n    if (addingBookmark) {\r\n      setBookmarkPage(page);\r\n      setAddingBookmark(false);\r\n      try {\r\n        await fetch(`http://localhost:5000/user/${userId}/books/bookmark`, {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ userId, bookName, page }),\r\n        });\r\n      } catch (err) {\r\n        setError(\"Error al guardar el marcador.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"read-book-container\">\r\n      <h2>{bookName}</h2>\r\n      <p>{error && `Error: ${error}`}</p>\r\n      <div className=\"book-content\">\r\n        <div className=\"page-content\" ref={leftContentRef} onClick={() => handlePageClick(currentPageState + 1)}>\r\n          <pre>{leftPageContent}</pre>\r\n          <div className=\"page-number\">Página {currentPageState + 1}</div>\r\n          {bookmarkPage === currentPageState + 1 && (\r\n            <img src={bookmarkIcon} alt=\"Bookmark\" className=\"bookmark-icon\" />\r\n          )}\r\n        </div>\r\n        <div className=\"page-content\" ref={rightContentRef} onClick={() => handlePageClick(currentPageState + 2)}>\r\n          <pre>{rightPageContent}</pre>\r\n          <div className=\"page-number\">Página {currentPageState + 2}</div>\r\n          {bookmarkPage === currentPageState + 2 && (\r\n            <img src={bookmarkIcon} alt=\"Bookmark\" className=\"bookmark-icon\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"navigation-buttons\">\r\n        <button onClick={handlePreviousPage}>Anterior</button>\r\n        <button onClick={handleNextPage}>Siguiente</button>\r\n        <button onClick={handleCloseBook}>Cerrar libro</button>\r\n        <button onClick={handleAddBookmark}>Añadir marcador</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReadBook;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}