{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chivi\\\\Desktop\\\\uni\\\\personal\\\\VerseVault-Pro\\\\app\\\\src\\\\MyList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport loadingGif from './assets/logo/loading.gif'; // Importar el GIF de carga\nimport './MyList.css'; // Importar el archivo CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyList({\n  userId,\n  setView,\n  setCurrentBook\n}) {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [bookName, setBookName] = useState(\"\");\n  const [showInput, setShowInput] = useState(false);\n  const [actionType, setActionType] = useState(\"\");\n  const [downloadingBook, setDownloadingBook] = useState(null); // Estado para el libro que se está descargando\n\n  // Obtener libros del servidor\n  const fetchBooks = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/user/${userId}/books`);\n      if (!response.ok) {\n        throw new Error(response.status === 404 ? \"No se encontraron libros para este usuario.\" : \"Error al obtener los libros.\");\n      }\n      const data = await response.json();\n\n      // Verificar si los libros están descargados\n      const booksWithDownloadStatus = await Promise.all(data.map(async book => {\n        const downloadResponse = await fetch(`http://localhost:5000/user/${userId}/books/${book.id_libro}/isDownloaded`);\n        const downloadData = await downloadResponse.json();\n        return {\n          ...book,\n          descargado: downloadData.isDownloaded\n        };\n      }));\n      setBooks(booksWithDownloadStatus);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchBooks();\n  }, [userId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 21\n  }, this);\n  if (books.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No hay libros en tu lista.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 34\n  }, this);\n\n  // Función para descargar libros\n  const handleDownloadBook = async (bookName, authorName) => {\n    setDownloadingBook(bookName); // Mostrar el GIF de carga\n    try {\n      const response = await fetch(`http://localhost:5000/user/${userId}/books/download`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          bookName,\n          authorName\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        //alert(\"Descarga completada. Revisa la carpeta 'libros'.\");\n        setBooks(prevBooks => prevBooks.map(book => book.titulo === bookName ? {\n          ...book,\n          descargado: true\n        } : book));\n      } else {\n        setError(data.message);\n      }\n    } catch (err) {\n      setError(\"Error al descargar el libro.\");\n    } finally {\n      setDownloadingBook(null); // Ocultar el GIF de carga\n    }\n  };\n\n  // Otras funciones (Eliminar, Agregar, Leer)\n  const handleDeleteBook = async bookName => {\n    try {\n      const response = await fetch(`http://localhost:5000/user/${userId}/books/delete`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          bookName\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setBooks(prevBooks => prevBooks.filter(book => book.titulo !== bookName));\n      } else {\n        setError(data.message);\n      }\n    } catch (err) {\n      setError(\"Error al eliminar el libro.\");\n    }\n  };\n  const handleAddBook = async bookName => {\n    try {\n      const response = await fetch(`http://localhost:5000/addBook`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userId,\n          tituloLibro: bookName,\n          fecha_lec: new Date().toISOString().split(\"T\")[0]\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setBooks(prevBooks => [...prevBooks, data.newBook]);\n      } else {\n        setError(data.message);\n      }\n    } catch (err) {\n      setError(\"Error al agregar el libro.\");\n    }\n  };\n  const handleReadBook = (bookName, currentPage) => {\n    setCurrentBook({\n      bookName,\n      currentPage\n    });\n    setView(\"readBook\");\n  };\n\n  // Mostrar input según la acción\n  const handleButtonClick = type => {\n    setActionType(type);\n    setShowInput(true);\n  };\n\n  // Ejecutar la acción correspondiente\n  const handleAction = () => {\n    if (!bookName) {\n      setError(\"Por favor, ingresa el nombre del libro.\");\n      return;\n    }\n    if (actionType === \"add\") {\n      handleAddBook(bookName);\n    } else if (actionType === \"delete\") {\n      handleDeleteBook(bookName);\n    } else if (actionType === \"read\") {\n      handleReadBook(bookName, 0); // Inicialmente, comenzamos desde la página 0\n    }\n    setShowInput(false);\n    setBookName(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mylist-title\",\n      children: \"Your Book List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: books.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: book.titulo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: book.autor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), \"Fecha de lectura: \", book.fecha_lectura, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), \"P\\xE1gina actual: \", book.pagina_actual, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), book.descargado ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mylist-button\",\n          onClick: () => handleReadBook(book.titulo, book.pagina_actual),\n          children: \"Leer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mylist-button\",\n            onClick: () => handleDownloadBook(book.titulo, book.autor),\n            children: \"Descargar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), downloadingBook === book.titulo && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: loadingGif,\n            alt: \"Loading...\",\n            style: {\n              width: '20px',\n              marginLeft: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 53\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this)]\n      }, book.id_libro, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mylist-action-button\",\n        onClick: () => handleButtonClick(\"add\"),\n        children: \"Agregar libro a mi Lista\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mylist-action-button\",\n        onClick: () => handleButtonClick(\"delete\"),\n        children: \"Eliminar libro de mi Lista\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), showInput && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: bookName,\n        onChange: e => setBookName(e.target.value),\n        placeholder: \"Nombre del libro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mylist-action-button\",\n        onClick: handleAction,\n        children: \"Confirmar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n_s(MyList, \"Kh4GzLx4CtmGvm5buDOGHWgM6ao=\");\n_c = MyList;\nexport default MyList;\nvar _c;\n$RefreshReg$(_c, \"MyList\");","map":{"version":3,"names":["React","useEffect","useState","loadingGif","jsxDEV","_jsxDEV","MyList","userId","setView","setCurrentBook","_s","books","setBooks","loading","setLoading","error","setError","bookName","setBookName","showInput","setShowInput","actionType","setActionType","downloadingBook","setDownloadingBook","fetchBooks","response","fetch","ok","Error","status","data","json","booksWithDownloadStatus","Promise","all","map","book","downloadResponse","id_libro","downloadData","descargado","isDownloaded","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","handleDownloadBook","authorName","method","headers","body","JSON","stringify","prevBooks","titulo","handleDeleteBook","filter","handleAddBook","tituloLibro","fecha_lec","Date","toISOString","split","newBook","handleReadBook","currentPage","handleButtonClick","type","handleAction","autor","fecha_lectura","pagina_actual","onClick","style","display","alignItems","src","alt","width","marginLeft","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/chivi/Desktop/uni/personal/VerseVault-Pro/app/src/MyList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport loadingGif from './assets/logo/loading.gif'; // Importar el GIF de carga\r\nimport './MyList.css'; // Importar el archivo CSS\r\n\r\nfunction MyList({ userId, setView, setCurrentBook }) {\r\n  const [books, setBooks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [bookName, setBookName] = useState(\"\");\r\n  const [showInput, setShowInput] = useState(false);\r\n  const [actionType, setActionType] = useState(\"\");\r\n  const [downloadingBook, setDownloadingBook] = useState(null); // Estado para el libro que se está descargando\r\n\r\n  // Obtener libros del servidor\r\n  const fetchBooks = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/user/${userId}/books`);\r\n      if (!response.ok) {\r\n        throw new Error(response.status === 404 ? \"No se encontraron libros para este usuario.\" : \"Error al obtener los libros.\");\r\n      }\r\n      const data = await response.json();\r\n\r\n      // Verificar si los libros están descargados\r\n      const booksWithDownloadStatus = await Promise.all(\r\n        data.map(async (book) => {\r\n          const downloadResponse = await fetch(`http://localhost:5000/user/${userId}/books/${book.id_libro}/isDownloaded`);\r\n          const downloadData = await downloadResponse.json();\r\n          return { ...book, descargado: downloadData.isDownloaded };\r\n        })\r\n      );\r\n\r\n      setBooks(booksWithDownloadStatus);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBooks();\r\n  }, [userId]);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div className=\"error\">Error: {error}</div>;\r\n  if (books.length === 0) return <div>No hay libros en tu lista.</div>;\r\n\r\n  // Función para descargar libros\r\n  const handleDownloadBook = async (bookName, authorName) => {\r\n    setDownloadingBook(bookName); // Mostrar el GIF de carga\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/user/${userId}/books/download`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ bookName, authorName }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        //alert(\"Descarga completada. Revisa la carpeta 'libros'.\");\r\n        setBooks((prevBooks) =>\r\n          prevBooks.map((book) =>\r\n            book.titulo === bookName ? { ...book, descargado: true } : book\r\n          )\r\n        );\r\n      } else {\r\n        setError(data.message);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error al descargar el libro.\");\r\n    } finally {\r\n      setDownloadingBook(null); // Ocultar el GIF de carga\r\n    }\r\n  };\r\n\r\n  // Otras funciones (Eliminar, Agregar, Leer)\r\n  const handleDeleteBook = async (bookName) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/user/${userId}/books/delete`, {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ bookName }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setBooks((prevBooks) => prevBooks.filter((book) => book.titulo !== bookName));\r\n      } else {\r\n        setError(data.message);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error al eliminar el libro.\");\r\n    }\r\n  };\r\n\r\n  const handleAddBook = async (bookName) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/addBook`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ userId, tituloLibro: bookName, fecha_lec: new Date().toISOString().split(\"T\")[0] }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setBooks((prevBooks) => [...prevBooks, data.newBook]);\r\n      } else {\r\n        setError(data.message);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error al agregar el libro.\");\r\n    }\r\n  };\r\n\r\n  const handleReadBook = (bookName, currentPage) => {\r\n    setCurrentBook({ bookName, currentPage });\r\n    setView(\"readBook\");\r\n  };\r\n\r\n  // Mostrar input según la acción\r\n  const handleButtonClick = (type) => {\r\n    setActionType(type);\r\n    setShowInput(true);\r\n  };\r\n\r\n  // Ejecutar la acción correspondiente\r\n  const handleAction = () => {\r\n    if (!bookName) {\r\n      setError(\"Por favor, ingresa el nombre del libro.\");\r\n      return;\r\n    }\r\n\r\n    if (actionType === \"add\") {\r\n      handleAddBook(bookName);\r\n    } else if (actionType === \"delete\") {\r\n      handleDeleteBook(bookName);\r\n    } else if (actionType === \"read\") {\r\n      handleReadBook(bookName, 0);  // Inicialmente, comenzamos desde la página 0\r\n    }\r\n\r\n    setShowInput(false);\r\n    setBookName(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"mylist-title\">Your Book List</h2>\r\n      <ul>\r\n        {books.map((book) => (\r\n          <li key={book.id_libro}>\r\n            <div className=\"book-info\">\r\n              <strong>{book.titulo}</strong><span>{book.autor}</span>\r\n            </div>\r\n            <br />\r\n            Fecha de lectura: {book.fecha_lectura}\r\n            <br />\r\n            Página actual: {book.pagina_actual}\r\n            <br />\r\n            {book.descargado ? (\r\n              <button className=\"mylist-button\" onClick={() => handleReadBook(book.titulo, book.pagina_actual)}>Leer</button>\r\n            ) : (\r\n              <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <button className=\"mylist-button\" onClick={() => handleDownloadBook(book.titulo, book.autor)}>Descargar</button>\r\n                {downloadingBook === book.titulo && <img src={loadingGif} alt=\"Loading...\" style={{ width: '20px', marginLeft: '10px' }} />}\r\n              </div>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div>\r\n        <button className=\"mylist-action-button\" onClick={() => handleButtonClick(\"add\")}>Agregar libro a mi Lista</button>\r\n        <button className=\"mylist-action-button\" onClick={() => handleButtonClick(\"delete\")}>Eliminar libro de mi Lista</button>\r\n      </div>\r\n      {showInput && (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={bookName}\r\n            onChange={(e) => setBookName(e.target.value)}\r\n            placeholder=\"Nombre del libro\"\r\n          />\r\n          <button className=\"mylist-action-button\" onClick={handleAction}>Confirmar</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}