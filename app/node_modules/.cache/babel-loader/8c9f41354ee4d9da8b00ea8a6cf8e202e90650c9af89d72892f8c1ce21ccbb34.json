{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import loadingGif from'./assets/logo/loading.gif';// Importar el GIF de carga\nimport'./MyList.css';// Importar el archivo CSS\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MyList(_ref){let{userId,setView,setCurrentBook}=_ref;const[books,setBooks]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[bookName,setBookName]=useState(\"\");const[showInput,setShowInput]=useState(false);const[actionType,setActionType]=useState(\"\");const[downloadingBook,setDownloadingBook]=useState(null);// Estado para el libro que se está descargando\n// Obtener libros del servidor\nconst fetchBooks=async()=>{try{const response=await fetch(`http://localhost:5000/user/${userId}/books`);if(!response.ok){throw new Error(response.status===404?\"No se encontraron libros para este usuario.\":\"Error al obtener los libros.\");}const data=await response.json();// Verificar si los libros están descargados\nconst booksWithDownloadStatus=await Promise.all(data.map(async book=>{const downloadResponse=await fetch(`http://localhost:5000/user/${userId}/books/${book.id_libro}/isDownloaded`);const downloadData=await downloadResponse.json();return{...book,descargado:downloadData.isDownloaded};}));setBooks(booksWithDownloadStatus);}catch(err){setError(err.message);}finally{setLoading(false);}};useEffect(()=>{fetchBooks();},[userId]);if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});if(error)return/*#__PURE__*/_jsxs(\"div\",{className:\"error\",children:[\"Error: \",error]});if(books.length===0)return/*#__PURE__*/_jsx(\"div\",{children:\"No hay libros en tu lista.\"});// Función para descargar libros\nconst handleDownloadBook=async(bookName,authorName)=>{setDownloadingBook(bookName);// Mostrar el GIF de carga\ntry{const response=await fetch(`http://localhost:5000/user/${userId}/books/download`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({bookName,authorName})});const data=await response.json();if(response.ok){//alert(\"Descarga completada. Revisa la carpeta 'libros'.\");\nsetBooks(prevBooks=>prevBooks.map(book=>book.titulo===bookName?{...book,descargado:true}:book));}else{setError(data.message);}}catch(err){setError(\"Error al descargar el libro.\");}finally{setDownloadingBook(null);// Ocultar el GIF de carga\n}};// Otras funciones (Eliminar, Agregar, Leer)\nconst handleDeleteBook=async bookName=>{try{const response=await fetch(`http://localhost:5000/user/${userId}/books/delete`,{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({bookName})});const data=await response.json();if(response.ok){setBooks(prevBooks=>prevBooks.filter(book=>book.titulo!==bookName));}else{setError(data.message);}}catch(err){setError(\"Error al eliminar el libro.\");}};const handleAddBook=async bookName=>{try{const response=await fetch(`http://localhost:5000/addBook`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({userId,tituloLibro:bookName,fecha_lec:new Date().toISOString().split(\"T\")[0]})});const data=await response.json();if(response.ok){setBooks(prevBooks=>[...prevBooks,data.newBook]);}else{setError(data.message);}}catch(err){setError(\"Error al agregar el libro.\");}};const handleReadBook=(bookName,currentPage)=>{setCurrentBook({bookName,currentPage});setView(\"readBook\");};// Mostrar input según la acción\nconst handleButtonClick=type=>{setActionType(type);setShowInput(true);};// Ejecutar la acción correspondiente\nconst handleAction=()=>{if(!bookName){setError(\"Por favor, ingresa el nombre del libro.\");return;}if(actionType===\"add\"){handleAddBook(bookName);}else if(actionType===\"delete\"){handleDeleteBook(bookName);}else if(actionType===\"read\"){handleReadBook(bookName,0);// Inicialmente, comenzamos desde la página 0\n}setShowInput(false);setBookName(\"\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"mylist-title\",children:\"Your Book List\"}),/*#__PURE__*/_jsx(\"ul\",{children:books.map(book=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"book-info\",children:[/*#__PURE__*/_jsx(\"strong\",{children:book.titulo}),/*#__PURE__*/_jsx(\"span\",{children:book.autor})]}),/*#__PURE__*/_jsx(\"br\",{}),\"Fecha de lectura: \",book.fecha_lectura,/*#__PURE__*/_jsx(\"br\",{}),\"P\\xE1gina actual: \",book.pagina_actual,/*#__PURE__*/_jsx(\"br\",{}),book.descargado?/*#__PURE__*/_jsx(\"button\",{className:\"mylist-button\",onClick:()=>handleReadBook(book.titulo,book.pagina_actual),children:\"Leer\"}):/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"button\",{className:\"mylist-button\",onClick:()=>handleDownloadBook(book.titulo,book.autor),children:\"Descargar\"}),downloadingBook===book.titulo&&/*#__PURE__*/_jsx(\"img\",{src:loadingGif,alt:\"Loading...\",style:{width:'20px',marginLeft:'10px'}})]})]},book.id_libro))}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"mylist-action-button\",onClick:()=>handleButtonClick(\"add\"),children:\"Agregar libro a mi Lista\"}),/*#__PURE__*/_jsx(\"button\",{className:\"mylist-action-button\",onClick:()=>handleButtonClick(\"delete\"),children:\"Eliminar libro de mi Lista\"})]}),showInput&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:bookName,onChange:e=>setBookName(e.target.value),placeholder:\"Nombre del libro\"}),/*#__PURE__*/_jsx(\"button\",{className:\"mylist-action-button\",onClick:handleAction,children:\"Confirmar\"})]})]});}export default MyList;","map":{"version":3,"names":["React","useEffect","useState","loadingGif","jsx","_jsx","jsxs","_jsxs","MyList","_ref","userId","setView","setCurrentBook","books","setBooks","loading","setLoading","error","setError","bookName","setBookName","showInput","setShowInput","actionType","setActionType","downloadingBook","setDownloadingBook","fetchBooks","response","fetch","ok","Error","status","data","json","booksWithDownloadStatus","Promise","all","map","book","downloadResponse","id_libro","downloadData","descargado","isDownloaded","err","message","children","className","length","handleDownloadBook","authorName","method","headers","body","JSON","stringify","prevBooks","titulo","handleDeleteBook","filter","handleAddBook","tituloLibro","fecha_lec","Date","toISOString","split","newBook","handleReadBook","currentPage","handleButtonClick","type","handleAction","autor","fecha_lectura","pagina_actual","onClick","style","display","alignItems","src","alt","width","marginLeft","value","onChange","e","target","placeholder"],"sources":["C:/Users/chivi/Desktop/uni/personal/VerseVault-Pro/app/src/MyList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport loadingGif from './assets/logo/loading.gif'; // Importar el GIF de carga\r\nimport './MyList.css'; // Importar el archivo CSS\r\n\r\nfunction MyList({ userId, setView, setCurrentBook }) {\r\n  const [books, setBooks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [bookName, setBookName] = useState(\"\");\r\n  const [showInput, setShowInput] = useState(false);\r\n  const [actionType, setActionType] = useState(\"\");\r\n  const [downloadingBook, setDownloadingBook] = useState(null); // Estado para el libro que se está descargando\r\n\r\n  // Obtener libros del servidor\r\n  const fetchBooks = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/user/${userId}/books`);\r\n      if (!response.ok) {\r\n        throw new Error(response.status === 404 ? \"No se encontraron libros para este usuario.\" : \"Error al obtener los libros.\");\r\n      }\r\n      const data = await response.json();\r\n\r\n      // Verificar si los libros están descargados\r\n      const booksWithDownloadStatus = await Promise.all(\r\n        data.map(async (book) => {\r\n          const downloadResponse = await fetch(`http://localhost:5000/user/${userId}/books/${book.id_libro}/isDownloaded`);\r\n          const downloadData = await downloadResponse.json();\r\n          return { ...book, descargado: downloadData.isDownloaded };\r\n        })\r\n      );\r\n\r\n      setBooks(booksWithDownloadStatus);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBooks();\r\n  }, [userId]);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div className=\"error\">Error: {error}</div>;\r\n  if (books.length === 0) return <div>No hay libros en tu lista.</div>;\r\n\r\n  // Función para descargar libros\r\n  const handleDownloadBook = async (bookName, authorName) => {\r\n    setDownloadingBook(bookName); // Mostrar el GIF de carga\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/user/${userId}/books/download`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ bookName, authorName }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        //alert(\"Descarga completada. Revisa la carpeta 'libros'.\");\r\n        setBooks((prevBooks) =>\r\n          prevBooks.map((book) =>\r\n            book.titulo === bookName ? { ...book, descargado: true } : book\r\n          )\r\n        );\r\n      } else {\r\n        setError(data.message);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error al descargar el libro.\");\r\n    } finally {\r\n      setDownloadingBook(null); // Ocultar el GIF de carga\r\n    }\r\n  };\r\n\r\n  // Otras funciones (Eliminar, Agregar, Leer)\r\n  const handleDeleteBook = async (bookName) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/user/${userId}/books/delete`, {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ bookName }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setBooks((prevBooks) => prevBooks.filter((book) => book.titulo !== bookName));\r\n      } else {\r\n        setError(data.message);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error al eliminar el libro.\");\r\n    }\r\n  };\r\n\r\n  const handleAddBook = async (bookName) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/addBook`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ userId, tituloLibro: bookName, fecha_lec: new Date().toISOString().split(\"T\")[0] }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setBooks((prevBooks) => [...prevBooks, data.newBook]);\r\n      } else {\r\n        setError(data.message);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Error al agregar el libro.\");\r\n    }\r\n  };\r\n\r\n  const handleReadBook = (bookName, currentPage) => {\r\n    setCurrentBook({ bookName, currentPage });\r\n    setView(\"readBook\");\r\n  };\r\n\r\n  // Mostrar input según la acción\r\n  const handleButtonClick = (type) => {\r\n    setActionType(type);\r\n    setShowInput(true);\r\n  };\r\n\r\n  // Ejecutar la acción correspondiente\r\n  const handleAction = () => {\r\n    if (!bookName) {\r\n      setError(\"Por favor, ingresa el nombre del libro.\");\r\n      return;\r\n    }\r\n\r\n    if (actionType === \"add\") {\r\n      handleAddBook(bookName);\r\n    } else if (actionType === \"delete\") {\r\n      handleDeleteBook(bookName);\r\n    } else if (actionType === \"read\") {\r\n      handleReadBook(bookName, 0);  // Inicialmente, comenzamos desde la página 0\r\n    }\r\n\r\n    setShowInput(false);\r\n    setBookName(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"mylist-title\">Your Book List</h2>\r\n      <ul>\r\n        {books.map((book) => (\r\n          <li key={book.id_libro}>\r\n            <div className=\"book-info\">\r\n              <strong>{book.titulo}</strong><span>{book.autor}</span>\r\n            </div>\r\n            <br />\r\n            Fecha de lectura: {book.fecha_lectura}\r\n            <br />\r\n            Página actual: {book.pagina_actual}\r\n            <br />\r\n            {book.descargado ? (\r\n              <button className=\"mylist-button\" onClick={() => handleReadBook(book.titulo, book.pagina_actual)}>Leer</button>\r\n            ) : (\r\n              <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <button className=\"mylist-button\" onClick={() => handleDownloadBook(book.titulo, book.autor)}>Descargar</button>\r\n                {downloadingBook === book.titulo && <img src={loadingGif} alt=\"Loading...\" style={{ width: '20px', marginLeft: '10px' }} />}\r\n              </div>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div>\r\n        <button className=\"mylist-action-button\" onClick={() => handleButtonClick(\"add\")}>Agregar libro a mi Lista</button>\r\n        <button className=\"mylist-action-button\" onClick={() => handleButtonClick(\"delete\")}>Eliminar libro de mi Lista</button>\r\n      </div>\r\n      {showInput && (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={bookName}\r\n            onChange={(e) => setBookName(e.target.value)}\r\n            placeholder=\"Nombre del libro\"\r\n          />\r\n          <button className=\"mylist-action-button\" onClick={handleAction}>Confirmar</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}